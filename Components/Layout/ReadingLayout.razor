@inherits LayoutComponentBase

@implements IAsyncDisposable

@using Microsoft.AspNetCore.SignalR.Client
@using MudBlazor.Extensions
@using Zine.App
@using Zine.App.Domain.ComicBook
@using Zine.App.Helpers

<MudThemeProvider IsDarkMode="true" />
<MudDialogProvider  />
<MudSnackbarProvider />
<MudPopoverProvider/>

@inject NavigationManager NavigationManager

<PageTitle>Zine</PageTitle>

<MudLayout>
    <MudAppBar>
        <h1 class="font-bold text-2xl flex items-center gap-3">
            <MudButton @onclick="CloseReadingView">
                <MudIcon Icon="@Icons.Material.Filled.ChevronLeft" Color="Color.Primary"/>
                Back
            </MudButton>
        </h1>
    </MudAppBar>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {



    private HubConnection? _hubConnection;

    private bool IsConnected => _hubConnection?.State == HubConnectionState.Connected;

    private async Task CloseReadingView()
    {

        if (IsConnected)
        {
            await SendCloseComicBook();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        _hubConnection = new HubConnectionBuilder()
            .WithUrl(NavigationManager.ToAbsoluteUri("/CloseComicBookHub"))
            .Build();

        await _hubConnection.StartAsync();
    }

    private async Task SendCloseComicBook()
    {
        if (_hubConnection != null)
        {
            await _hubConnection.SendAsync("SendCloseComicBookSignal");
        }
    }

    public async ValueTask DisposeAsync()
    {
        if (_hubConnection != null)
        {
            await _hubConnection.DisposeAsync();
        }
    }
}
