@page "/Library"
@using Zine.App.Enums
@using Zine.App.Model.DB
@using Zine.App.Services
@using Zine.Window
@using Zine.Components.Components.Library

@* Action row with import, create directory and search *@
<div class="flex justify-between items-center mb-4">
	<div class="flex items-center gap-3">
		<CreateGroupButton CreateGroup="@CreateGroup"/>

		<ImportComicButton Import="@Import" />
	</div>


	<MudTextField
		@bind-Value="@SearchWord"
		class="max-w-xs"
		Label="Search"
		Variant="Variant.Outlined"
		Clearable="true"
		Adornment="Adornment.Start"
		AdornmentIcon="@Icons.Material.Filled.Search"
		DebounceInterval="300"
		OnDebounceIntervalElapsed="SearchByTitle" />
</div>


<MudGrid class="mx-auto" Justify="Justify.Center">

	@* Display groups *@
	@foreach (var group in FilteredGroupList)
	{
		<GroupCard Group="@group" />
	}

	@* Display comicbooks *@
	@foreach (var comic in FilteredComicsList)
	{
		<ComicBookCard ComicBook="comic" />
	}


</MudGrid>


@code
{
	[Inject]
	private ISnackbar? Snackbar { get; set; }

	[Inject]
	private IComicBookService? ComicBookService { get; set; }

	[Inject]
	private IGroupService? GroupService { get; set; }

	string SearchWord { get; set; } = "";
	List<ComicBook> OriginalComicsList { get; set; } = [];
	List<ComicBook> FilteredComicsList { get; set; } = [];
	List<Group> OriginalGroupList { get; set; } = [];
	List<Group> FilteredGroupList { get; set; } = [];

	protected void SearchByTitle(string searchTerm)
	{
		var lowerCaseSearchTerm = searchTerm.ToLower();
		FilteredComicsList = OriginalComicsList.Where(comic => comic.Name.ToLower().Contains(lowerCaseSearchTerm)).ToList();
		FilteredGroupList = OriginalGroupList.Where(group => group.Name.ToLower().Contains(lowerCaseSearchTerm)).ToList();
	}

	private void Import((ImportType importType, string path) args)
	{
		try
		{
			bool importSuccessful = ComicBookService!.ImportFromDisk(args.importType, args.path);

			if (!importSuccessful)
				Snackbar!.Add("An error occured during importing...", Severity.Error);
			else
			{
				Snackbar!.Add("Successfully imported comic books.", Severity.Success);
				LoadComics();
			}
		}
		catch (ArgumentOutOfRangeException e)
		{
			Snackbar!.Add(e.Message, Severity.Error);
		}
	}

	private void CreateGroup(string newGroupName)
	{
		GroupService!.Create(newGroupName);
		LoadGroups();
	}

	private void LoadGroups()
	{
		SearchWord = "";
		FilteredGroupList = OriginalGroupList = GroupService!.GetAllByParentId().ToList();
	}

	private void LoadComics()
	{
		SearchWord = "";
		FilteredComicsList = OriginalComicsList = ComicBookService!.GetAll().ToList();
	}

	protected override void OnInitialized()
	{
		base.OnInitialized();
		PageTitleManager.PageTitle = "Library";
		LoadComics();
		LoadGroups();
	}
}
