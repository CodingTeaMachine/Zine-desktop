@using Zine.App.Domain.ComicBook
@using Zine.App.Domain.Group
@using Zine.App.Enums

<MudItem>
	<div class="md:w-60 md:max-w-60 max-w-44">
		<MudPaper class="bg-[rgba(39,39,47,1)] p-3.5 rounded-lg">
			<MudGrid Spacing="2">
				@* Display the covers of the first 4 comicbooks in the group.
				   If fewer covers are present, display as many as posible *@
				@foreach (var imageIndex in Enumerable.Range(0, 4).ToList())
				{
					<MudItem sm="6" class="flex items-center justify-center">
						<MudPaper class="h-group-card w-full rounded-lg">
							@if (Group.ComicBooks.Count > imageIndex)
							{
								<MudImage Src="@GetCoverImage(_comicBooks[imageIndex])" Elevation="25" Class="rounded-lg h-group-card" />
							}
						</MudPaper>
					</MudItem>
				}
				@* Display the name of the group *@
				<MudItem sm="12" class="py-0">
					<p class="font-medium text-center line-clamp-3 ">@Group.Name</p>
				</MudItem>
			</MudGrid>
		</MudPaper>
	</div>
</MudItem>


@code {

	[Parameter]
	public required Group Group { get; set; }

	private List<ComicBook> _comicBooks = [];

	private string GetCoverImage(ComicBook comicBook)
	{
		return Path.Join(DataPath.ComicBookCoverDirectory, comicBook.Information.CoverImage).Replace("wwwroot", "");
	}

	protected override void OnInitialized()
	{
		base.OnInitialized();
		_comicBooks = Group.ComicBooks.ToList();
	}

}
