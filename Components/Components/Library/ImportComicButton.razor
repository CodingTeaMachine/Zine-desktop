@using Zine.App.Domain.ComicBook.Import
@using Zine.App.Enums
@using Zine.App.FileHelpers

@inject IDialogService DialogService

<MudMenu
	Label="Import"
	AnchorOrigin="Origin.BottomLeft"
	Variant="Variant.Filled"
	Color="Color.Primary"
	StartIcon="@Icons.Material.Filled.ArrowUpward">

	<MudMenuItem
		Icon="@Icons.Custom.FileFormats.FileDocument"
		OnClick="() => FileImportAction()"
		Label="File" />

	<MudMenuItem
		Icon="@Icons.Material.Filled.Folder"
		OnClick="() => DirectoryImportAction()"
		Label="Directory" />

</MudMenu>

@code {

	[Parameter]
	public EventCallback<ImportAction> Import { get; set; }


	private async void FileImportAction()
	{
		string? selectedPath = await FileSelector.GetFilePathFromFileDialog();

		if (string.IsNullOrEmpty(selectedPath))
			return;

		var action = new ImportAction
		{
			Type = ImportType.File,
			FilePath = selectedPath
		};

		await Import.InvokeAsync(action);
	}

	private async void DirectoryImportAction()
	{
		string? selectedPath = await FileSelector.GetDirectoryPathFromFileDialog();

		if (string.IsNullOrEmpty(selectedPath))
			return;

		bool isRecursiveImport = await DialogService.ShowMessageBox("Directory Import", "Would you like to import all comic books from sub folders too?", "Yes", "No") ?? false;
		bool keepFoldersAsGroups = false;

		if (isRecursiveImport)
		{
			keepFoldersAsGroups = await DialogService.ShowMessageBox("Directory import", "Would you like to import folders as groups?", "Yes", "No") ?? false;
		}

		var action = new ImportAction
		{
			Type = ImportType.Directory,
			FilePath = selectedPath,
			IsRecursiveImport = isRecursiveImport,
			KeepFoldersAsGroups = keepFoldersAsGroups
		};

		await Import.InvokeAsync(action);
	}

}
